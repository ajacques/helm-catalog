questions:

- variable: persistence.type.storage
  default: BindMount
  type: enum
  options:
  - BindMount
  group: persistence
  required: true
- variable: persistence.type.filestore
  default: BindMount
  label: Specifies how the Sentry filestore should be persisted, if at all.
  type: enum
  options:
  - None
  - BindMount
  - S3
  group: persistence
  required: true
- variable: persistence.bind_mount.base_dir
  type: string
  label: Base directory
  group: persistence
  description: Specifies a directory on the host to mount all persistent folders.
  show_if: 'persistence.type.storage=BindMount||persistence.type.filestore=BindMount'

# S3/Minio
- variable: persistence.s3.bucket_name
  type: string
  label: S3 Bucket
  group: persistence
  required: true
  description: Specifies the S3 bucket name
  show_if: 'persistence.type.filestore=S3'
- variable: persistence.s3.access_key
  type: string
  label: S3 IAM Access Key
  group: persistence
  description: Specifies the S3 access key
  show_if: 'persistence.type.filestore=S3'
- variable: persistence.s3.secret_key
  type: password
  label: S3 IAM Secret Key
  group: persistence
  description: Specifies the S3 secret key
  show_if: 'persistence.type.filestore=S3'
- variable: persistence.s3.endpoint_url
  type: string
  label: S3 Endpoint
  group: persistence
  description: Specifies the S3 endpoint
  show_if: 'persistence.type.filestore=S3'

- variable: postgres.enabled
  default: true
  description: Enable integrated Postgres database
  type: boolean
  label: Database
  group: Storage
  required: true
- variable: db.host
  type: string
  group: Storage
  label: Postgres hostname
  show_if: 'postgres.enabled=false'
- variable: db.database
  type: string
  group: Storage
  label: Database Name
  show_if: 'postgres.enabled=false'
- variable: db.username
  type: string
  label: DB Username
  group: Storage
  required: true
- variable: db.password
  type: string
  label: DB Password
  group: Storage
  required: true

- variable: email.host
  default: 172.17.0.1
  description: SMTP server
  type: string
  group: Mail
- variable: email.from
  type: string
  label: From Address
  default: Sentry.io <root@localhost>
  group: Mail
  description: Specifies the from address for email notifications
- variable: email.use_starttls
  type: boolean
  label: Enable TLS
  group: Mail
  description: Should Sentry.io use STARTTLS?
- variable: email.port
  type: int
  label: Port
  group: Mail
  min: 0
  default: 587
  max: 65535

- variable: github.enabled
  default: false
  type: boolean
  label: GitHub
  group: integrations
  show_subquestion_if: true
  subquestions:
  - variable: github.app.id
    description: GitHub App ID
    type: string
    required: true
    label: App ID
  - variable: github.app.name
    description: GitHub App Name
    type: string
    require: true
    label: GitHub App Name
  - variable: github.app.private_key
    description: Private KEY in PEM format
    type: multiline
    required: true
    label: Private Key
  - variable: github.app.client_id
    description: GitHub Client ID
    type: string
    required: true
    label: Client ID
  - variable: github.webhook_secret
    type: string
    require: true
    label: Webhook Secret
  - variable: github.app.client_secret
    description: Client secret
    type: string
    required: true
    label: Client secret

- variable: sentry.secret_key
  type: string
  required: true
  label: Secret Key
  min_length: 32

- variable: sentry.version
  type: string
  required: true
  group: Versions
  label: Sentry Version
  default: 24.4.0

- variable: ingress.hostname
  type: hostname
  group: HTTP
  label: UI Hostname

- variable: ingress.tls_secret_source
  type: enum
  label: TLS Secret Source
  group: HTTP
  description: If TLS is enabled, where should we find the TLS certificate?
  default: NoTLS
  options:
    - NoTLS
    - ExistingSecret
    - Replicated

- variable: ingress.tls_secret_name
  type: string
  group: HTTP
  required: true
  show_if: 'ingress.tls_secret_source=ExistingSecret'
  label: TLS Certificate Name

- variable: ingress.tls_replicate_from
  type: string
  group: HTTP
  required: true
  show_if: 'ingress.tls_secret_source=Replicated'
  label: TLS Secret To Replicate
  description: 'namespace/secret-name'

- variable: ingress.cache.enabled
  type: boolean
  group: HTTP
  label: Enable Proxy Caching
  description: If enabled, certain assets will be cached on the front-end proxy for improved performance.
  show_subquestion_if: true
  subquestions:
  - variable: ingress.cache.nginx_cache_zone
    type: string
    group: HTTP
    required: false
    label: NGINX Cache Zone
    description: 'Specifies the NGINX cache zone. NOTE: A zone must be configured in the nginx-ingress ConfigMap. See: [proxy_cache](http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache)'

- variable: prometheus.enabled
  type: boolean
  default: false
  group: Observability
  label: Enable Prometheus Scraping
  subquestions:
  - variable: prometheus.use_crds
    type: boolean
    default: false
    group: Observability
    label: Use Prometheus Operator CRDs


- variable: kafka.hostname
  type: string
  group: kafka
  label: Kafka Hostname
  description: 'Specify the Kafka hostname + port (hostname.:9092).'

- variable: sentry.ui.workers
  type: int
  label: Number of UI Workers
  group: Scaling
  min: 0
  default: 4
  max: 128
  description: 'Number of workers per replica to run.'

- variable: sentry.snuba.workers
  type: int
  label: Number of Snuba Workers
  group: Scaling
  min: 0
  default: 4
  max: 128
  description: 'Number of workers per replica to run for the snuba API.'

- variable: relay.public_key
  type: string
  group: Relay
  description: Specifices the public key from 'relay credentials generate --stdout'

- variable: relay.private_key
  type: string
  group: Relay
  description: Specifices the private key from 'relay credentials generate --stdout'

- variable: loglevel
  type: enum
  options:
    - WARN
    - INFO
    - DEBUG
  description: Defines
