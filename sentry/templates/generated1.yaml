---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-consumer
spec:
  selector:
    matchLabels:
      component: snuba-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - errors
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-outcomes-consumer
spec:
  selector:
    matchLabels:
      component: snuba-outcomes-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-outcomes-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - outcomes_raw
        - --auto-offset-reset=earliest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-outcomes-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-transactions-consumer
spec:
  selector:
    matchLabels:
      component: snuba-transactions-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-transactions-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - transactions
        - --consumer-group
        - transactions_group
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-transactions-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-replays-consumer
spec:
  selector:
    matchLabels:
      component: snuba-replays-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-replays-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - replays
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-replays-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-issue-occurrence-consumer
spec:
  selector:
    matchLabels:
      component: snuba-issue-occurrence-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-issue-occurrence-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - search_issues
        - --consumer-group
        - generic_events_group
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-issue-occurrence-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-metrics-consumer
spec:
  selector:
    matchLabels:
      component: snuba-metrics-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-metrics-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - metrics_raw
        - --consumer-group
        - snuba-metrics-consumers
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-metrics-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-generic-metrics-distributions-consumer
spec:
  selector:
    matchLabels:
      component: snuba-generic-metrics-distributions-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-generic-metrics-distributions-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - generic_metrics_distributions_raw
        - --consumer-group
        - snuba-gen-metrics-distributions-consumers
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-generic-metrics-distributions-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-generic-metrics-sets-consumer
spec:
  selector:
    matchLabels:
      component: snuba-generic-metrics-sets-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-generic-metrics-sets-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - generic_metrics_sets_raw
        - --consumer-group
        - snuba-gen-metrics-sets-consumers
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-generic-metrics-sets-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-generic-metrics-counters-consumer
spec:
  selector:
    matchLabels:
      component: snuba-generic-metrics-counters-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-generic-metrics-counters-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - generic_metrics_counters_raw
        - --consumer-group
        - snuba-gen-metrics-counters-consumers
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '750'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-generic-metrics-counters-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-replacer
spec:
  selector:
    matchLabels:
      component: snuba-replacer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-replacer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - replacer
        - --storage
        - errors
        - --auto-offset-reset=latest
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-replacer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-subscription-consumer-events
spec:
  selector:
    matchLabels:
      component: snuba-subscription-consumer-events
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-subscription-consumer-events
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - subscriptions-scheduler-executor
        - --dataset
        - events
        - --entity
        - events
        - --auto-offset-reset=latest
        - --no-strict-offset-reset
        - --consumer-group=snuba-events-subscriptions-consumers
        - --followed-consumer-group=snuba-consumers
        - --schedule-ttl=60
        - --stale-threshold-seconds=900
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-subscription-consumer-events
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-subscription-consumer-transactions
spec:
  selector:
    matchLabels:
      component: snuba-subscription-consumer-transactions
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-subscription-consumer-transactions
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - subscriptions-scheduler-executor
        - --dataset
        - transactions
        - --entity
        - transactions
        - --auto-offset-reset=latest
        - --no-strict-offset-reset
        - --consumer-group=snuba-transactions-subscriptions-consumers
        - --followed-consumer-group=transactions_group
        - --schedule-ttl=60
        - --stale-threshold-seconds=900
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-subscription-consumer-transactions
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-subscription-consumer-metrics
spec:
  selector:
    matchLabels:
      component: snuba-subscription-consumer-metrics
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-subscription-consumer-metrics
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - subscriptions-scheduler-executor
        - --dataset
        - metrics
        - --entity
        - metrics_sets
        - --entity
        - metrics_counters
        - --auto-offset-reset=latest
        - --no-strict-offset-reset
        - --consumer-group=snuba-metrics-subscriptions-consumers
        - --followed-consumer-group=snuba-metrics-consumers
        - --schedule-ttl=60
        - --stale-threshold-seconds=900
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-subscription-consumer-metrics
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-profiling-profiles-consumer
spec:
  selector:
    matchLabels:
      component: snuba-profiling-profiles-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-profiling-profiles-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - profiles
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '1000'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-profiling-profiles-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-profiling-functions-consumer
spec:
  selector:
    matchLabels:
      component: snuba-profiling-functions-consumer
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-profiling-functions-consumer
        chart: {{ .Chart.Name }}
    spec:
      containers:
      - args: 
        - consumer
        - --storage
        - functions_raw
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - '1000'
        - --no-strict-offset-reset
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba-profiling-functions-consumer
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-consumer
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: events-consumer
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: events-consumer
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - ingest-events
        - --consumer-group
        - ingest-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: events-consumer
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: attachments-consumer
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: attachments-consumer
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: attachments-consumer
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - ingest-attachments
        - --consumer-group
        - ingest-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: attachments-consumer
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transactions-consumer
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: transactions-consumer
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: transactions-consumer
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - ingest-transactions
        - --consumer-group
        - ingest-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: transactions-consumer
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-consumer
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: metrics-consumer
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: metrics-consumer
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - ingest-metrics
        - --consumer-group
        - metrics-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: metrics-consumer
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: generic-metrics-consumer
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: generic-metrics-consumer
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: generic-metrics-consumer
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - ingest-generic-metrics
        - --consumer-group
        - generic-metrics-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: generic-metrics-consumer
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billing-metrics-consumer
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: billing-metrics-consumer
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: billing-metrics-consumer
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - billing-metrics-consumer
        - --consumer-group
        - billing-metrics-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: billing-metrics-consumer
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingest-replay-recordings
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: ingest-replay-recordings
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: ingest-replay-recordings
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - ingest-replay-recordings
        - --consumer-group
        - ingest-replay-recordings
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: ingest-replay-recordings
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingest-occurrences
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: ingest-occurrences
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: ingest-occurrences
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - ingest-occurrences
        - --consumer-group
        - ingest-occurrences
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: ingest-occurrences
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingest-profiles
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: ingest-profiles
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: ingest-profiles
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - --no-strict-offset-reset
        - ingest-profiles
        - --consumer-group
        - ingest-profiles
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: ingest-profiles
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingest-monitors
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: ingest-monitors
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: ingest-monitors
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - --no-strict-offset-reset
        - ingest-monitors
        - --consumer-group
        - ingest-monitors
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: ingest-monitors
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-process-forwarder-errors
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: post-process-forwarder-errors
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: post-process-forwarder-errors
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - post-process-forwarder-errors
        - --consumer-group
        - post-process-forwarder
        - --synchronize-commit-log-topic=snuba-commit-log
        - --synchronize-commit-group=snuba-consumers
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: post-process-forwarder-errors
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-process-forwarder-transactions
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: post-process-forwarder-transactions
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: post-process-forwarder-transactions
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - post-process-forwarder-transactions
        - --consumer-group
        - post-process-forwarder
        - --synchronize-commit-log-topic=snuba-transactions-commit-log
        - --synchronize-commit-group
        - transactions_group
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: post-process-forwarder-transactions
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-process-forwarder-issue-platform
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: post-process-forwarder-issue-platform
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: post-process-forwarder-issue-platform
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - post-process-forwarder-issue-platform
        - --consumer-group
        - post-process-forwarder
        - --synchronize-commit-log-topic=snuba-generic-events-commit-log
        - --synchronize-commit-group
        - generic_events_group
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: post-process-forwarder-issue-platform
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-consumer-events
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: subscription-consumer-events
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: subscription-consumer-events
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - events-subscription-results
        - --consumer-group
        - query-subscription-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: subscription-consumer-events
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-consumer-transactions
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: subscription-consumer-transactions
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: subscription-consumer-transactions
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - transactions-subscription-results
        - --consumer-group
        - query-subscription-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: subscription-consumer-transactions
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-consumer-metrics
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: subscription-consumer-metrics
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: subscription-consumer-metrics
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - metrics-subscription-results
        - --consumer-group
        - query-subscription-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: subscription-consumer-metrics
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-consumer-generic-metrics
  labels:
    app: {{ template "sentry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: subscription-consumer-generic-metrics
      release: {{ template "sentry.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: subscription-consumer-generic-metrics
        release: {{ template "sentry.fullname" . }}
    spec:
      affinity: {}
      containers:
      - args: 
        - run
        - consumer
        - generic-metrics-subscription-results
        - --consumer-group
        - query-subscription-consumer
        envFrom:
        - secretRef:
            name: sentry
            optional: false
        - configMapRef:
            name: sentry
            optional: false
        - configMapRef:
            name: snuba-config
            optional: false
        image: getsentry/sentry:{{ .Values.sentry.version }}
        imagePullPolicy: IfNotPresent
        name: subscription-consumer-generic-metrics
        volumeMounts:
        - mountPath: /var/lib/sentry/files
          name: files
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      volumes:
      - name: files
        {{- if eq .Values.persistence.type.filestore "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/filestore
          type: ""
        {{- end }}
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
