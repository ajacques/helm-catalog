apiVersion: apps/v1
kind: Deployment
metadata:
  name: snuba-api
spec:
  selector:
    matchLabels:
      component: snuba-api
      chart: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config2: {{ include (print $.Template.BasePath "/sentry-config-file.yaml") . | sha256sum }}
        checksum/config3: {{ include (print $.Template.BasePath "/snuba/snuba-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        component: snuba-api
        chart: {{ .Chart.Name }}
    spec:
      affinity:
        podAffinity:
          # Affinity to run near the Clickhouse store
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: component
                    operator: In
                    values:
                    - clickhouse
                topologyKey: kubernetes.io/hostname
        # Affinity not to run multiple instances on the same pod
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - snuba-api
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - image: getsentry/snuba:{{ .Values.snuba.version }}
        imagePullPolicy: IfNotPresent
        name: snuba
        terminationMessagePolicy: FallbackToLogsOnError
        env:
        - name: UWSGI_MAX_REQUESTS
          value: '5000'
        - name: UWSGI_DISABLE_LOGGING
          value: 'true'
        - name: UWSGI_ENABLE_THREADS
          value: 'true'
        - name: UWSGI_DIE_ON_TERM
          value: 'true'
        - name: UWSGI_NEED_APP
          value: 'true'
        - name: UWSGI_IGNORE_SIGPIPE
          value: 'true'
        - name: UWSGI_IGNORE_WRITE_ERRORS
          value: 'true'
        - name: UWSGI_DISABLE_WRITE_EXCEPTION
          value: 'true'
        - name: UWSGI_WORKERS
          value: {{ .Values.sentry.snuba.workers | quote }}
        envFrom:
          - configMapRef:
              name: snuba-config
              optional: false
        resources:
          requests:
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - SETUID
            - SETGID
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/sentry/config.yml
          name: configyml
          readOnly: true
          subPath: config.yml
        - mountPath: /etc/sentry/sentry.conf.py
          name: configyml
          readOnly: true
          subPath: sentry.conf.py
      volumes:
      - configMap:
          defaultMode: 292
          name: sentryconfig
          optional: false
        name: configyml
