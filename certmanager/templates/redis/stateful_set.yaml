apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: {{ template "certmanager.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      chart: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: redis
        chart: {{ .Chart.Name }}
{{- if .Values.prometheus.enabled }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
{{- end }}
    spec:
      containers:
      - image: redis:5.0.5
        imagePullPolicy: Always
        name: redis
        volumeMounts:
        - mountPath: /data
          name: datavol
{{- if .Values.prometheus.enabled }}
      - name: prometheus-exporter
        env:
        - name: REDIS_ADDR
          value: localhost
        image: oliver006/redis_exporter:v1.0.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9121
          name: exporter-port
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: exporter-port
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 9121
          name: exporter-port
          protocol: TCP
{{- end }}
      volumes:
      - name: datavol
        {{- if eq .Values.persistence.type "BindMount" }}
        hostPath:
          path: {{ .Values.persistence.bind_mount.base_dir }}/redis
          type: ""
        {{- end }}
